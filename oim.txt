package com.test.rest;

import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;

public class RestAdapter {

public static void main(String[] args) {
RestAdapter adp=new RestAdapter();
HashMap<String,String> itResMap=new HashMap<String,String>();
itResMap.put("username", "Put user name here");
itResMap.put("password", "Put password here");
adp.pushUserLoginInSAP("User Login","Employee Number",itResMap);

}

public String pushUserLoginInSAP(String userLogin, String employeeNumber,
HashMap<String,String> itResMap) {
String response = "FAILED";
HttpURLConnection rc = null;
String serviceURL = itResMap.get("WebService URL") + "/" + employeeNumber + "/"
+ userLogin;
int len = serviceURL.length();
URL url;
try {
byte[] message = (itResMap.get("username")+":"+itResMap.get("password")).getBytes("UTF-8");
String encoded = javax.xml.bind.DatatypeConverter.printBase64Binary(message);
url = new URL(serviceURL);
rc = (HttpURLConnection) url.openConnection();
rc.setRequestMethod("POST");
rc.addRequestProperty("Authorization", "Basic "+encoded);
rc.setDoOutput(true);

rc.connect();
OutputStreamWriter out = new OutputStreamWriter(
rc.getOutputStream());
out.write(serviceURL, 0, len);
out.flush();
System.out.println("Request sent, reading response ");
InputStreamReader read = new InputStreamReader(rc.getInputStream());
StringBuilder sb = new StringBuilder();
int ch = read.read();
while (ch != -1) {
sb.append((char) ch);
ch = read.read();
}
response = sb.toString();
System.out.println("Response:"+response);
read.close();
rc.disconnect();
} catch (Exception e) {
System.out.println(e.getMessage());
}

return response;

}

}







‚Äê--------------



import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashSet;
import java.util.Hashtable;

import javax.security.auth.login.LoginException;

import oracle.iam.identity.usermgmt.api.UserManager;
import oracle.iam.identity.usermgmt.vo.User;
import oracle.iam.platform.OIMClient;

public class UpdateUserOrg {
       public static void main(String[] args) throws IOException {
             OIMClient client = getConnection();
             UserManager mgr = null;
             BufferedReader br = null;
             try {
                    br = new BufferedReader(new FileReader("C:\\FilePath\\a.txt"));
                    mgr = client.getService(UserManager.class);
                    String userLogin = "";
                    HashSet<String> retAttr = new HashSet<String>();
                    while ((userLogin = br.readLine()) != null) {
                          System.out.println("Updating organization of:" + userLogin);
                          User user = mgr.getDetails(userLogin, retAttr, true);
                          if (user != null) {
                                 User us=new User(user.getEntityId());
                                 us.setOrganizationKey("24");//Put ACT_Key of the required org
                                 mgr.modify(us);
                                 System.out.println("Updated organization of:" + userLogin);
                          } else
                                 System.out.println(userLogin + " not found");
                    }
             }

             catch (Exception e) {
                    System.out.println(e.getMessage());
             } finally {
                    if (br != null)
                          br.close();
             }
       }

       public static OIMClient getConnection() {
             Hashtable<Object, Object> env = new Hashtable<Object, Object>();
             env.put(OIMClient.JAVA_NAMING_FACTORY_INITIAL, "weblogic.jndi.WLInitialContextFactory");
             env.put(OIMClient.JAVA_NAMING_PROVIDER_URL, "t3://Host:Port");
              System.setProperty("java.security.auth.login.config",
                    "authwl.conf");

             System.setProperty("OIM.AppServerType", "wls");
             System.setProperty("APPSERVER_TYPE", "wls");
             oracle.iam.platform.OIMClient oimClient = new oracle.iam.platform.OIMClient(env);

             try {
                    System.out.println("Fetching OIM connection");
                    oimClient.login("", "".toCharArray());

                    System.out.print("Successfully Connected with OIM ");
             } catch (LoginException e) {
                    System.out.print("Login Exception" + e);
             }

             return oimClient;

       }

}

